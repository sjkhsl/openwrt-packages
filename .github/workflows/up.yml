name: On Push and Schedule Workflow

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */5 * * *'  # 每隔5小时执行一次

jobs:
  clone_and_check_for_changes:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Git credentials
      uses: de-vri-es/setup-git-credentials@v2
      with:
        credentials: https://sjkhsl:${{ secrets.TOKEN_SJKHSL }}@github.com/

    - name: Configure Git user
      run: |
        git config --global user.email "sjkhsl@qq.com"
        git config --global user.name "sjkhsl"

    - name: Clone and sparse-checkout subfolder from Repo 1
      run: |
        git clone --depth 1 https://github.com/kiddin9/openwrt-packages.git --branch master --single-branch --sparse subfolder
        cd subfolder
        git sparse-checkout set luci-app-autoreboot luci-app-ramfree luci-app-diskman luci-app-nginx-manager luci-app-filetransfer luci-app-netdata luci-app-mosdns luci-app-poweroffdevice luci-app-syncdial luci-app-nps luci-theme-edge luci-app-wrtbwmon luci-app-openclash r8125 nps upx ucl mosdns luci-lib-fs wrtbwmon v2dat 
        rsync -av --exclude='.git' --exclude='.gitignore' --exclude='LICENSE' --exclude='README.md' ./ "${{ github.workspace }}/"
        cd ..
        rm -rf subfolder

    - name: Clone and sparse-checkout subfolder from Repo 2
      run: |
        git clone --depth 1 https://github.com/Lienol/openwrt.git --branch 23.05 --single-branch --sparse subfolder2
        cd subfolder2
        git sparse-checkout set package/default-settings
        rsync -av --exclude='.git' "package/default-settings/" "${{ github.workspace }}/default-settings/"
        cd ..
        rm -rf subfolder2

    # 可能的其它步骤...

    - name: Remove package/default-settings (如果之前步骤中有此操作)
      run: |
        rm -f "${{ github.workspace }}/package/default-settings"

    - name: Check for changes
      run: |
        cd "${{ github.workspace }}"
        git add -A
        if [ -z "$(git diff --staged)" ]; then
          echo "No changes detected. Skipping push."
        else
          echo "Changes detected. Pushing updates..."
          git commit -m "Updated submodules on $(date +'%Y-%m-%d %H:%M:%S')"
          git push origin main
        fi
