name: On Push and Schedule Workflow

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 */5 * * *'  # 每隔5小时执行一次

jobs:
  clone_and_update:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Git credentials
      uses: de-vri-es/setup-git-credentials@v2
      with:
        credentials: https://sjkhsl:${{ secrets.TOKEN_SJKHSL }}@github.com/

    - name: Remove existing subfolders
      run: |
        rm -rf "${{ github.workspace }}/subfolder"
        rm -rf "${{ github.workspace }}/subfolder2"

    - name: Clone and sparse-checkout subfolder from Repo 1
      run: |
        git clone --depth 1 https://github.com/kiddin9/openwrt-packages.git --branch master --single-branch --sparse subfolder
        cd subfolder
        git sparse-checkout set luci-app-autoreboot luci-app-ramfree luci-app-diskman luci-app-nginx-manager luci-app-filetransfer luci-app-netdata luci-app-mosdns luci-app-poweroff luci-app-syncdial luci-app-nps luci-theme-edge luci-app-wrtbwmon luci-app-openclash r8125 nps upx ucl mosdns luci-lib-fs wrtbwmon v2dat 
        cp -r luci-app-autoreboot luci-app-ramfree luci-app-diskman luci-app-nginx-manager luci-app-filetransfer luci-app-netdata luci-app-mosdns luci-app-poweroff luci-app-syncdial luci-app-nps luci-theme-edge luci-app-wrtbwmon luci-app-openclash r8125 nps upx ucl mosdns luci-lib-fs wrtbwmon v2dat "${{ github.workspace }}/"

    - name: Clone and sparse-checkout subfolder from Repo 2
      run: |
        git clone --depth 1 https://github.com/Lienol/openwrt.git --branch 23.05 --single-branch --sparse subfolder2
        cd subfolder2
        git sparse-checkout set package/default-settings
        cp -r package/default-settings "${{ github.workspace }}/"

    - name: Compare changes and force update
      run: |
        changes=$(git diff HEAD~1)
        if [ -n "$changes" ]; then
          for pkg in $(git diff HEAD~1 --name-only); do
            if [ "$(grep "PKG_RELEASE" $pkg/Makefile)" ]; then
              sed -i "s/PKG_RELEASE:=.*/PKG_RELEASE:=$(git rev-list --count main $pkg)/" $pkg/Makefile || true
            fi
          done
          git reset --soft HEAD~1
          git add .
          Emoji=("🎉" "🤞" "✨" "🎁" "🎈" "🎄" "🎨" "💋" "🍓" "🍕" "🍉" "💐" "🌴" "🚀" "🛸" "🗽" "⛅" "🌈" "🔥" "⛄" "🐶" "🏅" "🦄" "🐤")
          git commit -m "${Emoji[$[$RANDOM % ${#Emoji[@]}]]} Sync $(date +%Y-%m-%d" "%H:%M:%S)"
          git push -f
        else
          echo "No changes, skipping push."
        fi
